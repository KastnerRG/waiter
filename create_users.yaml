- name: "Create User {{item.username}}"
  become: true
  ansible.builtin.user:
    name: '{{ item["username"] }}'
    create_home: yes
    shell: /bin/bash
    append: yes
    groups: '{{item.groups | default([]) | join(",")}}'
    password: '{{item.password | default("!")}}'
    expires: '{{(item.expires | to_datetime).strftime("%s")}}'
    update_password: 'on_create'
- name: Deploy keys
  become: true
  ansible.posix.authorized_key:
    user: "{{ item.username }}"
    state: present
    key: '{{ keys }}'
  loop: "{{item.authorized_keys}}"
  when: item.authorized_keys is defined
  loop_control:
    loop_var: keys
- name: sudo allow
  become: true
  community.general.sudoers:
    runas: root
    state: present
    user: '{{ item.username }}'
    commands: '{{ item.sudo_allow }}'
    name: "ansible_sudoers_{{item.username | replace('.', '_')}}"
  when: item.sudo_allow is defined
- name: sudo deny
  become: true
  community.general.sudoers:
    state: absent
    name: "ansible_sudoers_{{item.username | replace('.', '_')}}"
  when: item.sudo_allow is not defined

# Create slice directory
- ansible.builtin.getent:
    database: passwd
- name: Create slice dir
  become: true
  ansible.builtin.file:
   path: "/etc/systemd/system/user-{{getent_passwd[item.username].1}}.slice.d"
   state: directory
- name: Create memory override
  become: true
  community.general.ini_file:
    path: "/etc/systemd/system/user-{{getent_passwd[item.username].1}}.slice.d/50-memory.conf"
    section: Slice
    option: MemoryMax
    value: '{{item.memory_limit}}'
  when: item.memory_limit is defined
- name: Create memory override
  become: true
  community.general.ini_file:
    path: "/etc/systemd/system/user-{{getent_passwd[item.username].1}}.slice.d/50-memory.conf"
    section: Slice
    option: MemoryMax
    state: absent
  when: item.memory_limit is not defined
- name: Systemctl daemon-reload
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: item.memory_limit is defined
